package steps;

import io.cucumber.java.en.Given;
import io.cucumber.java.en.When;
import io.cucumber.java.en.Then;
import org.testng.Assert;

import java.util.List;

import dto.TelephoneDialPad;
import framework.Base;

import java.util.Arrays;

public class TelephoneDialPadSteps extends Base {

    private String inputDigit;
    private Object result;
    private List<String> actualCombinations;

    @Given("I have the digit {string}")
    public void i_have_the_digit(String string) {
        this.inputDigit = string;
        logInfo("The given input digit is " + inputDigit);
    }

    @When("I retrieve all possible combinations")
    public void iRetrieveAllPossibleCombinations() {

        result = TelephoneDialPad.retrieveCombinations(inputDigit);
        actualCombinations = (List<String>) result;
        logInfo("The actual combination generated by Telephone dail pad " + actualCombinations.toString());
    }

    @Then("the result should contain {string}")
    public void the_result_should_contain(String string) {
        List<String> expectedCombinations = Arrays.asList(string.split(",\\s*"));
        Assert.assertTrue(actualCombinations.containsAll(expectedCombinations),
                "The expected combinations are not found in the actual result");
        logSuccess("The actual combinations " + expectedCombinations + " are matched with expected combination "
                + expectedCombinations);

        Assert.assertEquals(actualCombinations.size(), expectedCombinations.size(),
                "The actual combinations size doesn't match the expected size");
        logSuccess("The actual combinations size [" + actualCombinations.size() + "]  match the expected size "
                + actualCombinations.size() + "]");
    }

    @Given("I have the input {string}")
    public void I_have_the_input(String string) {
        this.inputDigit = string;
        logInfo("The given input  is " + inputDigit);
    }

    @When("I retrieve the response message")
    public void I_retrieve_the_response_message() {
        result = TelephoneDialPad.retrieveCombinations(inputDigit);
        logInfo("The actual combination generated by Telephone dail pad " + result.toString());
    }

    @Then("I should receive an error message {string}")
    public void I_should_receive_an_error_message(String expectedMessage) {
        Assert.assertEquals(expectedMessage, (String) result,
                "expected message was [" + expectedMessage.toString() + "] but found [" + result + "]");
        logSuccess("expected message  [" + expectedMessage + "] matched with actual message [" + result + "]");
    }

}
